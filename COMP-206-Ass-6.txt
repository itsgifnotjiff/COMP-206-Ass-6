// Student Name : Yordan Radev
// Student ID   : 260 744 314

####################################################################################################
linked.c
####################################################################################################

struct ACCOUNT *head = NULL

struct ACCOUNT
{
	int accountNumber;
	float balance;
	struct ACCOUNT *next;
}

void findUpdate(int account, int amount);
{
	currACCOUNT = head;

	while(currACCOUNT.next != NULL)
		if(currACCOUNT == account)
			currACCOUNT.balance + ammount;
		return 0

	AACCOUNT.account= account;
	ACCOUNT.ammount = ammount;
	ACCOUNT.next = NULL;
	currACCOUNT.next = ACCOUNT
	
}
void prettyPrint();
{
	currentACCOUNT = head;
	while(currentACCOUNT.next != NULL)
	{
		printf("ACCOUNT ID: %i \t BALANCE: $ %6.2f", *acct, *amnt)
	}
}

####################################################################################################
main.c
####################################################################################################

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>


int main(int argc, char *argv[]) {

FILE *p;
p = fopen("file.ssv", 

open file.ssv

Loop through all the records and call parse (whose pointers *acct and *ammt you pass to findUpdate)
Then loop thorugh and call prettyprint

fclose(p);

return 1
}
####################################################################################################
ssv.c
####################################################################################################



void parse(char record[], int *acct, float *amnt);
{
#	string separator = " "
#	string accounts;
#	string ammounts;

# Instead of this shit use the tokens like in assignement 5 

	char delim[] = " ";
	char *ptr = strtok(record, delim);

	sscanf(record[], "%i %f", accounts,ammounts )

	*acct = atoi(account);
	*amnt = atof(ammounts);
}
